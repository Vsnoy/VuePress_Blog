(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{464:function(s,a,n){"use strict";n.r(a);var t=n(14),e=Object(t.a)({},(function(){var s=this,a=s.$createElement,n=s._self._c||a;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"原型链"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型链"}},[s._v("#")]),s._v(" 原型链")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/Vsnoy/PicGo/main/VuePress/prototype_chain_01.png",alt:"prototype_chain_01"}})]),s._v(" "),n("h2",{attrs:{id:"构造函数"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#构造函数"}},[s._v("#")]),s._v(" 构造函数")]),s._v(" "),n("p",[s._v("使用构造函数创建一个实例对象。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function Person() {}\nvar person = new Person()\nperson.name = 'Trauma'\nconsole.log(person.name) // Trauma\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])]),n("p",[s._v("在这个例子中，"),n("code",[s._v("Person")]),s._v(" 就是一个构造函数，我们使用 "),n("code",[s._v("new")]),s._v(" 创建了一个实例对象 "),n("code",[s._v("person")]),s._v("。")]),s._v(" "),n("h2",{attrs:{id:"prototype"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#prototype"}},[s._v("#")]),s._v(" prototype")]),s._v(" "),n("p",[s._v("每个 "),n("strong",[s._v("构造函数")]),s._v(" 都有一个 "),n("code",[s._v("prototype")]),s._v(" 属性，该属性指向构造函数创建的实例对象的原型对象。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function Person() {}\nPerson.prototype.name = 'Trauma'\n\nvar person1 = new Person()\nvar person2 = new Person()\n\nconsole.log(person1.name) // Trauma\nconsole.log(person2.name) // Trauma\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br")])]),n("p",[s._v("那什么是原型对象呢？你可以这样理解：每一个 "),n("code",[s._v("JS")]),s._v(" 对象 ( "),n("code",[s._v("null")]),s._v(" 除外）在创建的时候就会与之关联另一个对象，\n这个对象就是我们所说的原型对象，每一个对象都会从原型对象 "),n("strong",[s._v('"继承"')]),s._v(" 属性。")]),s._v(" "),n("p",[s._v("构造函数和实例原型对象之间的关系图如下：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/Vsnoy/PicGo/main/VuePress/prototype_01.png",alt:"prototype_01"}})]),s._v(" "),n("h2",{attrs:{id:"proto"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#proto"}},[s._v("#")]),s._v(" __proto__")]),s._v(" "),n("p",[s._v("每个 "),n("strong",[s._v("实例对象")]),s._v(" 都有一个 "),n("code",[s._v("__proto__")]),s._v(" 属性，该属性指向实例对象的原型对象。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function Person() {}\nvar person = new Person()\nconsole.log(person.__proto__ === Person.prototype) // true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("更新下关系图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/Vsnoy/PicGo/main/VuePress/prototype_02.png",alt:"prototype_02"}})]),s._v(" "),n("h2",{attrs:{id:"constructor"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#constructor"}},[s._v("#")]),s._v(" constructor")]),s._v(" "),n("p",[s._v("每个 "),n("strong",[s._v("原型对象")]),s._v(" 都有一个 "),n("code",[s._v("constructor")]),s._v(" 属性指向关联的构造函数。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function Person() {}\nconsole.log(Person === Person.prototype.constructor) // true\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),n("p",[s._v("更新下关系图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/Vsnoy/PicGo/main/VuePress/prototype_03.png",alt:"prototype_03"}})]),s._v(" "),n("h2",{attrs:{id:"实例与原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#实例与原型"}},[s._v("#")]),s._v(" 实例与原型")]),s._v(" "),n("p",[s._v("当读取实例的属性时，如果找不到，就会查找与对象关联的原型中的属性，如果还查不到，就去找原型的原型，一直找到最顶层为止。")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("function Person() {}\n\nPerson.prototype.name = 'Violet';\n\nvar person = new Person();\n\nperson.name = 'Trauma';\nconsole.log(person.name) // Trauma\n\ndelete person.name;\nconsole.log(person.name) // Violet\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br")])]),n("h2",{attrs:{id:"原型的原型"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型的原型"}},[s._v("#")]),s._v(" 原型的原型")]),s._v(" "),n("p",[s._v("原型对象也是对象，既然是对象，我们就可以用最原始的方式创建它：")]),s._v(" "),n("div",{staticClass:"language- line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-text"}},[n("code",[s._v("var obj = new Object();\nobj.name = 'Trauma'\nconsole.log(obj.name) // Trauma\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")]),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),n("p",[s._v("更新下关系图：")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/Vsnoy/PicGo/main/VuePress/prototype_04.png",alt:"prototype_04"}})]),s._v(" "),n("h2",{attrs:{id:"原型链-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原型链-2"}},[s._v("#")]),s._v(" 原型链")]),s._v(" "),n("p",[s._v("原型链本质上就是查找属性或方法的链条。当访问一个属性或方法时，解释器首先会在当前对象中查找，\n若没找到则会在对象的原型对象中继续查找，直到找到该属性或方法，或抵达最顶层的原型对象为止，这就是原型链。")]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/Vsnoy/PicGo/main/VuePress/prototype_05.png",alt:"prototype_05"}})]),s._v(" "),n("p",[n("img",{attrs:{src:"https://raw.githubusercontent.com/Vsnoy/PicGo/main/VuePress/prototype_chain_02.jpg",alt:"prototype_chain_02"}})]),s._v(" "),n("h2",{attrs:{id:"参考"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[s._v("#")]),s._v(" 参考")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://tsejx.github.io/javascript-guidebook/object-oriented-programming/inheritance/prototype-chain/",target:"_blank",rel:"noopener noreferrer"}},[s._v("原型链"),n("OutboundLink")],1)]),s._v(" "),n("li",[n("a",{attrs:{href:"https://github.com/mqyqingfeng/Blog/blob/master/articles/%E6%B7%B1%E5%85%A5%E7%B3%BB%E5%88%97%E6%96%87%E7%AB%A0/JavaScript%E6%B7%B1%E5%85%A5%E4%B9%8B%E4%BB%8E%E5%8E%9F%E5%9E%8B%E5%88%B0%E5%8E%9F%E5%9E%8B%E9%93%BE.md",target:"_blank",rel:"noopener noreferrer"}},[s._v("JavaScript 深入之从原型到原型链"),n("OutboundLink")],1)])])])}),[],!1,null,null,null);a.default=e.exports}}]);